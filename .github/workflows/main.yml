# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on: [ push, pull_request, workflow_dispatch ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-versions: [3.6]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Get the tag names
      - name: Get tag names
        id: get_tags
        run: echo ::set-output name=TAGS::$(prometheus/docker/docker-tags.sh)

      # Build python source distribution tarball
      - name: Build source distribution
        run: |
          cd prometheus/unisight-data-bridge
          python setup.py sdist
      - name: Build Container
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: unisight-data-bridge
          tags: ${{ steps.get_tags.outputs.TAGS }}
          dockerfiles: |
            prometheus/docker/Dockerfile

      # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
      # in which case 'username' and 'password' can be omitted.
      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/univa
          username: univa+github_push
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: true
          files: ./prometheus/unisight-data-bridge/dist/unisight-data-bridge-*.tar.gz
